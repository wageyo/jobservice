<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="esd.dao.AdminInfoDao">
	
	<!-- 查询 User 账户 -->
	<resultMap type="User" id="ResultUser">
		<id column="u_id" property="id" />
		<result column="u_loginName" property="loginName" />
		<result column="u_passWord" property="passWord" />
		<result column="u_locationID" property="locationID" />
		<result column="u_type" property="type" />
	</resultMap>
	
	<!-- 查询Area 地名 -->
	<resultMap id="ResultArea" type="Area">
		<id column="a_code" property="code" />
		<result column="a_name" property="name" />
		<result column="a_pyName" property="pyName" />
		<result column="a_abbr" property="abbr" />
		<result column="a_mark" property="mark" />
	</resultMap>
	
	<!-- 查询AdminInfo 地名 -->
	<resultMap id="ResultAdminInfo" type="AdminInfo">
		<id column="r_id" property="id" />
		<result column="r_createDate" property="createDate" />
		<result column="r_updateCheck" property="updateCheck" />
		<result column="r_updateDate" property="updateDate" />
		<result column="r_name" property="name" />
		<result column="r_address" property="address" />
		<association property="user" resultMap="ResultUser" javaType="User" />
		<association property="area" resultMap="ResultArea" javaType="Area" />
	</resultMap>
	
	<!-- 查询AdminInfo 地名 -->
	<insert id="save" parameterType="AdminInfo" useGeneratedKeys="true" keyProperty="id">
		<selectKey resultType="java.lang.Short" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into admininfo(createdate,updatecheck,updatedate,name,address,uid,acode)
		values(now(),#{updateCheck},now(),#{name},#{address},#{user.id},#{area.code})
	</insert>
	
	<!-- delete -->
	<delete id="delete" parameterType="int">
		delete from admininfo where id = #{id}
	</delete>

	<!-- update -->
	<update id="update" parameterType="AdminInfo">
		update admininfo
		<trim prefix="set" suffixOverrides=",">
			updatedate = now(),
			<if test="updateCheck != null and updateCheck != 0">
				updatedheck=#{updateCheck},
			</if>
			<if test="name != null and name != ''">name = #{name},</if>
			<if test="address != null and address != ''">
				address = #{address},
			</if>
			<if test="area != null">
				<if test="area.code != null and area.code != ''">
					acode = #{area.code}
				</if>
			</if>
		</trim>
		where id = #{id}
	</update>

	<!-- get by id -->
	<select id="getById" resultMap="ResultAdminInfo" parameterType="int">
		select 
			r.id as r_id, r.createdate as r_createdate, r.updatecheck as r_updatecheck, r.updatedate as r_updatecheck, r.name as r_name, r.address as r_address,
			u.id as u_id, u.loginname as u_loginName, u.password as u_passWord, u.type as u_type,
			a.name as a_name, a.pyname as a_pyName, a.abbr as a_abbr, a.mark as a_mark
		from admininfo as r, user as u, area as a
		where r.uid = u.id and r.acode = a.code and r.id = #{id}
	</select>	
	
	<!-- get by obj -->
	<select id="getByObj" resultMap="ResultAdminInfo" parameterType="AdminInfo">
		select 
			r.id as r_id, r.createdate as r_createdate, r.updatecheck as r_updatecheck, r.updatedate as r_updatecheck, r.name as r_name, r.address as r_address,
			u.id as u_id, u.loginname as u_loginName, u.password as u_passWord, u.type as u_type,
			a.name as a_name, a.pyname as a_pyName, a.abbr as a_abbr, a.mark as a_mark
		from admininfo as r, user as u, area as a
		<trim prefix="where" prefixOverrides="and|or">
			r.uid = u.id and r.acode = a.code 
			<if test="name != null and name != ''">
				and r.name = #{name}
			</if>
			<if test="address != null and address != ''">
				and r.address = #{address}
			</if>
			<if test="user != null">
				<if test="user.id != null and user.id > 0">
					and r.uid = #{user.id}
				</if>
			</if>
			<if test="area != null">
				<if test="area.code != null and area.code != ''">
					and r.acode = #{area.code}
				</if>
			</if>
		</trim>
	</select>

	<!-- getByPage -->
	<select id="getByPage" parameterType="map" resultMap="ResultAdminInfo">
		select 
			r.id as r_id, r.createdate as r_createdate, r.updatecheck as r_updatecheck, r.updatedate as r_updatecheck, r.name as r_name, r.address as r_address,
			u.id as u_id, u.loginname as u_loginName, u.password as u_passWord, u.type as u_type,
			a.name as a_name, a.pyname as a_pyName, a.abbr as a_abbr, a.mark as a_mark
		from admininfo as r, user as u, area as a
		<trim prefix="where" prefixOverrides="and|or">
			r.uid = u.id and r.acode = a.code 
			<if test="adminInfo != null">
				<if test="adminInfo.name != null and adminInfo.name != ''">
					and r.name = #{adminInfo.name}
				</if>
				<if test="adminInfo.address != null and adminInfo.address != ''">
					and r.address = #{adminInfo.address}
				</if>
				<if test="adminInfo.user != null">
					<if test="adminInfo.user.id != null and adminInfo.user.id > 0">
						and u.id = #{adminInfo.user.id}
					</if>
				</if>
				<if test="adminInfo.area != null">
					<if test="adminInfo.area.code != null and adminInfo.area.code != ''">
						and a.code = #{adminInfo.area.code}
					</if>
				</if>
			</if>
		</trim>
		<if test="start != null and size != null">
			limit #{start},#{size}
		</if>
	</select>

	<!-- getTotalCount -->
	<select id="getTotalCount" parameterType="map" resultType="int">
		select count(*) 
		from admininfo as r, user as u, area as a
		<trim prefix="where" prefixOverrides="and|or">
			r.uid = u.id and r.acode = a.code 
			<if test="adminInfo != null">
				<if test="adminInfo.name != null and adminInfo.name != ''">
					and r.name = #{adminInfo.name}
				</if>
				<if test="adminInfo.address != null and adminInfo.address != ''">
					and r.address = #{adminInfo.address}
				</if>
				<if test="adminInfo.user != null">
					<if test="adminInfo.user.id != null and adminInfo.user.id > 0">
						and u.id = #{adminInfo.user.id}
					</if>
				</if>
				<if test="adminInfo.area != null">
					<if test="adminInfo.area.code != null and adminInfo.area.code != ''">
						and a.code = #{adminInfo.area.code}
					</if>
				</if>
			</if>
		</trim>
	</select>
	
	<!-- 根据账号id, 得到管理员用户 -->
	<select id="getByAccount" resultMap="ResultAdminInfo" parameterType="int">
		select 
			r.id as r_id, r.createdate as r_createdate, r.updatecheck as r_updatecheck, r.updatedate as r_updatecheck, r.name as r_name, r.address as r_address,
			u.id as u_id, u.loginname as u_loginName, u.password as u_passWord, u.type as u_type,
			a.name as a_name, a.pyname as a_pyName, a.abbr as a_abbr, a.mark as a_mark
		from admininfo as r, user as u, area as a
		where r.uid = u.id and r.acode = a.code and r.uid = #{uid}
	</select>
	
	
</mapper>
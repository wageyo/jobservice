<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="esd.dao.JobDao">

	<!-- result map of Area -->
	<resultMap id="ResultArea" type="Area">
		<id column="a_code" property="code" jdbcType="VARCHAR" />
		<result column="a_name" property="name" jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- result map of JobCategory -->
	<resultMap id="ResultJobCategory" type="JobCategory">
		<id column="jc_code" property="code" jdbcType="VARCHAR" />
		<result column="jc_name" property="name" jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- result map of Job -->
	<resultMap id="ResultJob" type="Job">
		<id column="j_id" property="id" jdbcType="INTEGER" />
		<result column="j_create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="j_update_check" property="updateCheck" jdbcType="VARCHAR" />
		<result column="j_update_date" property="updateDate" jdbcType="TIMESTAMP" />
		<result column="j_log_user" property="logUser" jdbcType="VARCHAR" />
		<result column="j_name" property="name" jdbcType="VARCHAR" />
		<result column="j_hire_number" property="hireNumber" jdbcType="INTEGER" />
		<result column="j_salary" property="salary" jdbcType="VARCHAR" />
		<result column="j_education" property="education" jdbcType="VARCHAR" />
		<result column="j_experience" property="experience" jdbcType="VARCHAR" />
		<result column="j_gender" property="gender" jdbcType="VARCHAR" />
		<result column="j_age" property="age" jdbcType="VARCHAR" />
		<result column="j_description" property="description" jdbcType="VARCHAR" />
		<result column="j_provide_benefit" property="provideBenefit" jdbcType="VARCHAR" />
		<result column="j_contact_person" property="contactPerson" jdbcType="VARCHAR" />
		<result column="j_contact_tel" property="contactTel" jdbcType="VARCHAR" />
		<result column="j_contact_email" property="contactEmail" jdbcType="VARCHAR" />
		<result column="j_view_count" property="viewCount" jdbcType="INTEGER" />
		<result column="j_nature" property="nature" jdbcType="VARCHAR" />
		<result column="j_effective_time" property="effectiveTime" jdbcType="TIMESTAMP" />
		<result column="j_work_place" property="workPlace.code" jdbcType="VARCHAR" />
		<result column="j_bed" property="bed" jdbcType="TINYINT" />
		<result column="j_lunch" property="lunch" jdbcType="TINYINT" />
		<result column="j_check_status" property="checkStatus" jdbcType="VARCHAR" />
		<result column="j_mark" property="mark" jdbcType="VARCHAR" />
		<association property="company" javaType="Company" resultMap="ResultCompany" jdbcType="VARCHAR" />
		<association property="area" javaType="Area" resultMap="ResultArea" jdbcType="VARCHAR" />
		<association property="jobCategory" javaType="JobCategory" resultMap="ResultJobCategory" jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- result map of Company -->
	<resultMap id="ResultCompany" type="Company">
		<id column="c_id" property="id" jdbcType="INTEGER"  />
		<result column="c_create_date" property="createDate" jdbcType="TIMESTAMP"  />
		<result column="c_update_check" property="updateCheck" jdbcType="VARCHAR"  />
		<result column="c_update_date" property="updateDate"  jdbcType="TIMESTAMP" />
		<result column="c_log_user" property="logUser"  jdbcType="VARCHAR" />
		<result column="c_name" property="name" jdbcType="VARCHAR"  />
		<result column="c_corporate_representative" property="corporateRepresentative" jdbcType="VARCHAR"  />
		<result column="c_contact_person" property="contactPerson" jdbcType="VARCHAR" />
		<result column="c_telephone" property="telephone" jdbcType="VARCHAR" />
		<result column="c_contact_dept" property="contactDept" jdbcType="VARCHAR" />
		<result column="c_fax" property="fax" jdbcType="VARCHAR" />
		<result column="c_email" property="email" jdbcType="VARCHAR" />
		<result column="c_address" property="address" jdbcType="VARCHAR" />
		<result column="c_introduction" property="introduction" jdbcType="VARCHAR" />
		<result column="c_organization_code" property="organizationCode" jdbcType="VARCHAR" />
		<result column="c_commercial_code" property="commercialCode" jdbcType="VARCHAR" />
		<result column="c_tax_code" property="taxCode" jdbcType="VARCHAR" />
		<result column="c_social_security_code" property="socialSecurityCode" jdbcType="VARCHAR" />
		<result column="c_web_site_id" property="webSiteId" jdbcType="VARCHAR" />
		<result column="c_lao_wang_code" property="laoWangCode" jdbcType="VARCHAR" />
		<result column="c_scale" property="scale" jdbcType="VARCHAR" />
		<result column="c_nature" property="nature" jdbcType="VARCHAR" />
		<result column="c_economy_type" property="economyType" jdbcType="VARCHAR" />
		<result column="c_remark" property="remark" jdbcType="VARCHAR" />
		<result column="c_view_count" property="viewCount" jdbcType="INTEGER" />
		<result column="c_check_status" property="checkStatus" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="base_column">
		job.id as j_id,	job.create_date as j_create_date, job.update_check as j_update_check, job.update_date as j_update_date, job.log_user as j_log_user,
			job.name as j_name, job.hire_number as j_hire_number, job.salary as j_salary, job.education as j_education, 
			job.experience as j_experience, job.gender as j_gender, job.age as j_age, job.description as j_description, 
			job.provide_benefit as j_provide_benefit,job.contact_person as j_contact_person, job.contact_tel as j_contact_tel, 
			job.contact_email as j_contact_email, job.view_count as j_view_count, job.nature as j_nature, job.effective_time as j_effective_time, 
			job.work_place as j_work_place, job.bed as j_bed, job.lunch as j_lunch, job.check_status as j_check_status, job.mark as j_mark,  
		c.id as c_id, c.create_date as c_create_date, c.update_check as c_update_check, c.update_date as c_update_date, c.log_user as c_log_user,
			c.name as c_name, c.corporate_representative as c_corporate_representative, c.contact_person as c_contact_person, 
			c.telephone as c_telephone, c.contact_dept as c_contact_dept, c.fax as c_fax, c.email as c_email, c.address as c_address, 
			c.introduction as c_introduction, c.organization_code as c_organization_code, c.commercial_code as c_commercial_code, 
			c.tax_code as c_tax_code, c.social_security_code as c_social_security_code, c.web_site_id as c_web_site_id, 
			c.lao_wang_code as c_lao_wang_code, c.scale as c_scale, c.nature as c_nature, c.economy_type as c_economy_type, 
			c.remark c_remark, c.view_count as c_view_count, c.check_status as c_check_status,
		a.code as a_code, a.name as a_name,
		jc.code as jc_code, jc.name as jc_name 
	</sql>
	<sql id="base_column_mate">
		job.id as j_id,	job.create_date as j_create_date, job.update_check as j_update_check, job.update_date as j_update_date, job.log_user as j_log_user,
			job.name as j_name, job.hire_number as j_hire_number, job.salary as j_salary, job.education as j_education, 
			job.experience as j_experience, job.gender as j_gender, job.age as j_age, job.description as j_description, 
			job.provide_benefit as j_provide_benefit,job.contact_person as j_contact_person, job.contact_tel as j_contact_tel, 
			job.contact_email as j_contact_email, job.view_count as j_view_count, job.nature as j_nature, job.effective_time as j_effective_time, 
			job.work_place as j_work_place, job.bed as j_bed, job.lunch as j_lunch, job.check_status as j_check_status, job.mark as j_mark,  
		a.code as a_code, a.name as a_name,
		jc.code as jc_code, jc.name as jc_name 
	</sql>
	<sql id="from_table">
		job left join company as c on job.cid = c.id 
			left join area as a on job.acode =a.code 
			left join job_category as jc on job.jccode = jc.code  
	</sql>
	
	<sql id="from_table_mate">
		job left join area as a on job.acode =a.code 
			left join job_category as jc on job.jccode = jc.code 
	</sql> 
	<!-- insert -->
	<insert id="save" parameterType="Job" useGeneratedKeys="true" keyProperty="id">
		<selectKey resultType="java.lang.Integer" order="AFTER"
			keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into job
		<trim prefix="(" suffix=")" suffixOverrides=",">
			create_date,
			update_check,
			update_date,
			<if test="logUser != null and logUser != ''">
				log_user,
			</if>
			<if test="name != null and name != ''">
				name,
			</if>
			<if test="hireNumber != null and hireNumber > 0">
				hire_number,
			</if>
			<if test="salary != null and salary != ''">
				salary,
			</if>
			<if test="education != null and education != ''">
				education,
			</if>
			<if test="experience != null and experience != ''">
				experience,
			</if>
			<if test="gender != null and gender != ''">
				gender,
			</if>
			<if test="age != null and age != ''">
				age,
			</if>
			<if test="description != null and description != ''">
				description,
			</if>
			<if test="provideBenefit != null and provideBenefit != ''">
				provide_benefit,
			</if>
			<if test="contactPerson != null and contactPerson != ''">
				contact_person,
			</if>
			<if test="contactTel != null and contactTel != ''">
				contact_tel,
			</if>
			<if test="contactEmail != null and contactEmail != ''">
				contact_email,
			</if>
			view_count,
			<if test="nature != null and nature != ''">
				nature,
			</if>
			<if test="effectiveTime != null">
				effective_time,
			</if>
			<if test="workPlace != null">
				<if test="workPlace.code != null and workPlace.code != ''">
					work_place,
				</if>
			</if>
			<if test="bed != null">
				bed,
			</if>
			<if test="lunch != null">
				lunch,
			</if>
			<if test="checkStatus != null and checkStatus != ''">
				check_status,
			</if>
			<if test="mark != null and mark != ''">
				mark,
			</if>
			<if test="company != null">
				<if test="company.id != null and company.id > 0">
					cid,
				</if>
			</if>
			<if test="area != null">
				<if test="area.code != null and area.code != ''">
					acode,
				</if>
			</if>
			<if test="jobCategory != null">
				<if test="jobCategory.code != null and jobCategory.code != ''">
					jccode
				</if>
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			now(), default, now(),
			<if test="logUser != null and logUser != ''">
				#{logUser, jdbcType=VARCHAR},
			</if>
			<if test="name != null and name != ''">
				#{name, jdbcType=VARCHAR},
			</if>
			<if test="hireNumber != null and hireNumber > 0">
				#{hireNumber, jdbcType=INTEGER},
			</if>
			<if test="salary != null and salary != ''">
				#{salary, jdbcType=VARCHAR},
			</if>
			<if test="education != null and education != ''">
				#{education, jdbcType=VARCHAR},
			</if>
			<if test="experience != null and experience != ''">
				#{experience, jdbcType=VARCHAR},
			</if>
			<if test="gender != null and gender != ''">
				#{gender, jdbcType=VARCHAR},
			</if>
			<if test="age != null and age != ''">
				#{age, jdbcType=VARCHAR},
			</if>
			<if test="description != null and description != ''">
				#{description, jdbcType=VARCHAR},
			</if>
			<if test="provideBenefit != null and provideBenefit != ''">
				#{provideBenefit, jdbcType=VARCHAR},
			</if>
			<if test="contactPerson != null and contactPerson != ''">
				#{contactPerson, jdbcType=VARCHAR},
			</if>
			<if test="contactTel != null and contactTel != ''">
				#{contactTel, jdbcType=VARCHAR},
			</if>
			<if test="contactEmail != null and contactEmail != ''">
				#{contactEmail, jdbcType=VARCHAR},
			</if>
			default,
			<if test="nature != null and nature != ''">
				#{nature, jdbcType=VARCHAR},
			</if>
			<if test="effectiveTime != null">
				#{effectiveTime, jdbcType=TIMESTAMP},
			</if>
			<if test="workPlace != null">
				<if test="workPlace.code != null and workPlace.code != ''">
					#{workPlace.code, jdbcType=VARCHAR},
				</if>
			</if>
			<if test="bed != null">
				#{bed, jdbcType=TINYINT},
			</if>
			<if test="lunch != null">
				#{lunch, jdbcType=TINYINT},
			</if>
			<if test="checkStatus != null and checkStatus != ''">
				#{checkStatus, jdbcType=VARCHAR},
			</if>
			<if test="mark != null and mark != ''">
				#{mark, jdbcType=VARCHAR},
			</if>
			<if test="company != null">
				<if test="company.id != null and company.id > 0">
					#{company.id, jdbcType=INTEGER},
				</if>
			</if>
			<if test="area != null">
				<if test="area.code != null and area.code != ''">
					#{area.code, jdbcType=VARCHAR},
				</if>
			</if>
			<if test="jobCategory != null">
				<if test="jobCategory.code != null and jobCategory.code != ''">
					#{jobCategory.code, jdbcType=VARCHAR}
				</if>
			</if>
		</trim>
	</insert>

	<!-- delete -->
	<delete id="delete" parameterType="java.lang.Integer">
		delete from job where id = #{id, jdbcType=INTEGER}
	</delete>
	
	<!-- deleteByCompany -->
	<delete id="deleteByCompany" parameterType="java.lang.Integer">
		delete from job where cid = #{cid, jdbcType=INTEGER}
	</delete>
	
	<!-- update -->
	<update id="update" parameterType="Job">
		update job
		<trim prefix="set" suffixOverrides=",">
			update_date = now(),
			<if test="logUser != null and logUser != ''">
				log_user = #{logUser, jdbcType=VARCHAR},
			</if>
			<if test="name != null and name != ''">
				name = #{name, jdbcType=VARCHAR},
			</if>
			<if test="hireNumber != null and hireNumber > 0">
				hire_number = #{hireNumber, jdbcType=INTEGER},
			</if>
			<if test="salary != null and salary != ''">
				salary = #{salary, jdbcType=VARCHAR},
			</if>
			<if test="education != null and education != ''">
				education = #{education, jdbcType=VARCHAR},
			</if>
			<if test="experience != null and experience != ''">
				experience = #{experience, jdbcType=VARCHAR},
			</if>
			<if test="gender != null and gender != ''">
				gender = #{gender, jdbcType=VARCHAR},
			</if>
			<if test="age != null and age != ''">
				age = #{age, jdbcType=VARCHAR},
			</if>
			<if test="description != null and description != ''">
				description = #{description, jdbcType=VARCHAR},
			</if>
			<if test="provideBenefit != null and provideBenefit != ''">
				provide_benefit = #{provideBenefit, jdbcType=VARCHAR},
			</if>
			<if test="contactPerson != null and contactPerson != ''">
				contact_person = #{contactPerson, jdbcType=VARCHAR},
			</if>
			<if test="contactTel != null and contactTel != ''">
				contact_tel = #{contactTel, jdbcType=VARCHAR},
			</if>
			<if test="contactEmail != null and contactEmail != ''">
				contact_email = #{contactEmail, jdbcType=VARCHAR},
			</if>
			<if test="viewCount != null and viewCount > 0">
				view_count = #{viewCount, jdbcType=VARCHAR},
			</if>
			<if test="nature != null and nature != ''">
				nature = #{nature, jdbcType=VARCHAR},
			</if>
			<if test="effectiveTime != null">
				effective_time = #{effectiveTime, jdbcType=TIMESTAMP},
			</if>
			<if test="workPlace != null">
				<if test="workPlace.code != null and workPlace.code != ''">
					work_place = #{workPlace.code, jdbcType=VARCHAR},
				</if>
			</if>
			<if test="bed != null">
				bed = #{bed, jdbcType=TINYINT},
			</if>
			<if test="lunch != null">
				lunch = #{lunch, jdbcType=TINYINT},
			</if>
			<if test="checkStatus != null and checkStatus != ''">
				check_status = #{checkStatus, jdbcType=VARCHAR},
			</if>
			<if test="mark != null and mark != ''">
				mark = #{mark, jdbcType=VARCHAR},
			</if>
			<if test="company != null">
				<if test="company.id != null and company.id > 0">
					cid = #{company.id, jdbcType=INTEGER},
				</if>
			</if>
			<if test="area != null">
				<if test="area.code != null and area.code != ''">
					acode = #{area.code, jdbcType=VARCHAR},
				</if>
			</if>
			<if test="jobCategory != null">
				<if test="jobCategory.code != null and jobCategory.code != ''">
					jccode = #{jobCategory.code, jdbcType=VARCHAR},
				</if>
			</if>
			update_check = update_check + 1 
		</trim>
		where id= #{id, jdbcType=INTEGER} and update_check = #{updateCheck, jdbcType=INTEGER}
	</update>

	<!-- get by id -->
	<select id="getById" resultMap="ResultJob" parameterType="java.lang.Integer">
		select <include refid="base_column"/>
		from <include refid="from_table"/>
		where job.id = #{id, jdbcType=INTEGER}
	</select>

	<!-- get update check by id -->
	<select id="getUpdateCheck" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		select update_check from job where id = #{id, jdbcType=INTEGER}
	</select>
	
	<!-- get By Obj -->
	<select id="getByObj" resultMap="ResultJob" parameterType="Job">
		select
			<include refid="base_column"/> 
		from <include refid="from_table"/>
		<trim prefix="where" prefixOverrides="and|or">
			<if test="name != null and name != ''">
				and job.name like concat('%',#{name},'%')
			</if>
			<if test="education != null and education !=''">
				and job.education = #{education}
			</if>
			<if test="experience != null and experience != ''">
				and job.experience = #{experience}
			</if>
			<if test="salary != null and salary != ''">
				and job.salary = #{salary}
			</if>
			<if test="area != null">
				<if test="area.code != null and area.code != ''">
					and a.code like concat('',#{area.code},'')
				</if>
			</if>
<!--			<if test="jobCategory != null and jobCategory.code != null and jobCategory.code != '' and jobCategory.code != '不限'">-->
<!--				and jc.code like concat('%',#{jobCategory.code},'%') -->
<!--			</if>-->
		</trim>
		order by job.createDate desc
	</select>

	<select id="getByPage" resultMap="ResultJob" parameterType="map">
		select
			<include refid="base_column"/>
		from <include refid="from_table"/>
		<trim prefix="where" prefixOverrides="and|or" >
			<if test="job != null">
				<if test="job.name != null and job.name != ''">
 					job.name like concat('%',#{job.name,jdbcType=VARCHAR},'%')
 				</if>
 				<if test="job.salary != null and job.salary != ''">
 					and job.salary = #{job.salary,jdbcType=VARCHAR}
 				</if>
 				<if test="job.education != null and job.education !=''">
 					and job.education &gt;= #{job.education,jdbcType=VARCHAR}
 				</if>
 				<if test="job.experience != null and job.experience != ''">
 					and job.experience = #{job.experience,jdbcType=VARCHAR}
 				</if>
 				<if test="job.gender != null and job.gender != ''">
 					and job.gender = #{job.gender,jdbcType=VARCHAR}
 				</if>
				<if test="job.nature != null and job.nature != ''">
 					and job.nature = #{job.nature,jdbcType=VARCHAR}
 				</if>
 				<choose>
					<when test="job.isActiveEffectiveTime == null">
						and job.effective_time &gt;= now() 
					</when>
					<otherwise>
						<if test="job.isActiveEffectiveTime == true">
							and job.effective_time &gt;= now()
						</if>
					</otherwise>
				</choose>
				<if test="job.workPlace != null">
					<if test="job.workPlace.code != null and job.workPlace.code != ''">
						and job.work_place like concat('%',#{job.workPlace.code, jdbcType=VARCHAR},'%')
					</if>
				</if>
 				<if test="job.company != null">
 					<if test="job.company.id > 0">
 						and job.cid = #{job.company.id,jdbcType=INTEGER}
 					</if>
 				</if>
 				<if test="job.area != null">
					<if test="job.area.code != null and job.area.code != ''">
						and job.acode like concat('%',#{job.area.code,jdbcType=VARCHAR},'%')
					</if>
				</if>
				<if test="job.jobCategory != null ">
					<if test="job.jobCategory.code != null and job.jobCategory.code != '' and job.jobCategory.code != '不限'">
						and job.jccode like #{job.jobCategory.code}
						<!-- below is also works ! -->
					<!-- and ${job.jobCategory.code}	 -->
					</if>
				</if>
 				<choose>
					<when test="job.checkStatus != null and job.checkStatus != ''">
						and job.check_status = #{job.checkStatus, jdbcType=VARCHAR}
					</when>
					<otherwise>
						and job.check_status = 'ok'
					</otherwise>
				</choose>
			</if>
		</trim>
		order by job.create_date desc 
		limit #{start, jdbcType=INTEGER}, #{size, jdbcType=INTEGER}
	</select>
	
	<select id="getTotalCount" resultType="int" parameterType="map">
		select count(*)
		from <include refid="from_table"/>
		<trim prefix="where" prefixOverrides="and|or" >
			<if test="job != null">
				<if test="job.name != null and job.name != ''">
 					job.name like concat('%',#{job.name,jdbcType=VARCHAR},'%')
 				</if>
 				<if test="job.salary != null and job.salary != ''">
 					and job.salary = #{job.salary,jdbcType=VARCHAR}
 				</if>
 				<if test="job.education != null and job.education !=''">
 					and job.education &gt;= #{job.education,jdbcType=VARCHAR}
 				</if>
 				<if test="job.experience != null and job.experience != ''">
 					and job.experience = #{job.experience,jdbcType=VARCHAR}
 				</if>
 				<if test="job.gender != null and job.gender != ''">
 					and job.gender = #{job.gender,jdbcType=VARCHAR}
 				</if>
				<if test="job.nature != null and job.nature != ''">
 					and job.nature = #{job.nature,jdbcType=VARCHAR}
 				</if>
 				<choose>
					<when test="job.isActiveEffectiveTime == null">
						and job.effective_time &gt;= now() 
					</when>
					<otherwise>
						<if test="job.isActiveEffectiveTime == true">
							and job.effective_time &gt;= now()
						</if>
					</otherwise>
				</choose>
				<if test="job.workPlace != null">
					<if test="job.workPlace.code != null and job.workPlace.code != ''">
						and job.work_place like concat('%',#{job.workPlace.code, jdbcType=VARCHAR},'%')
					</if>
				</if>
 				<if test="job.company != null">
 					<if test="job.company.id > 0">
 						and job.cid = #{job.company.id,jdbcType=INTEGER}
 					</if>
 				</if>
 				<if test="job.area != null">
					<if test="job.area.code != null and job.area.code != ''">
						and job.acode like concat('%',#{job.area.code,jdbcType=VARCHAR},'%')
					</if>
				</if>
				<if test="job.jobCategory != null ">
					<if test="job.jobCategory.code != null and job.jobCategory.code != '' and job.jobCategory.code != '不限'">
						and job.jccode like #{job.jobCategory.code}
						<!-- below is also works ! -->
					<!-- and ${job.jobCategory.code}	 -->
					</if>
				</if>
 				<choose>
					<when test="job.checkStatus != null and job.checkStatus != ''">
						and job.check_status = #{job.checkStatus, jdbcType=VARCHAR}
					</when>
					<otherwise>
						and job.check_status = 'ok'
					</otherwise>
				</choose>
			</if>
		</trim>
	</select>
	
	<!-- get by company -->
	<select id="getByCompany" resultMap="ResultJob" parameterType="map">
		select
			<include refid="base_column"/>
		from <include refid="from_table"/>
		where job.cid = #{cid, jdbcType=INTEGER}
		limit #{start, jdbcType=INTEGER}, #{size, jdbcType=INTEGER}
	</select>
		<!-- get by company -->
	<select id="getByCompanyMate" resultMap="ResultJob" parameterType="map">
		select  <include refid="base_column_mate"/> from <include refid="from_table_mate"/> 
		where job.cid = #{cid, jdbcType=INTEGER}
		limit #{start, jdbcType=INTEGER}, #{size, jdbcType=INTEGER}
	</select>
	<select id="getByCompanyCount" resultType="int" parameterType="map">
		select count(*)
		from <include refid="from_table"/>
		where job.cid = #{cid, jdbcType=INTEGER}
	</select>
</mapper>